function [u,e,Obj]=CG_1RR(b,ig,tevS,tol,alpha,h)
%Standard Tikhonov regularization with re-weighted CGM
%b: the right-hand side vector;
%ig: the initial guess for the CG method;
%tev: the eigenvalues generated by gentev.m;
%tol: the tolerance;
%u: the output solution;
%n: number of layers in the multi-layer model

mmax=1000; %the maximal number of iterations
Obj=zeros(1,mmax);

u=ig;
u0=u;
r=-b;
I0=txS2(tevS,r);
It=I0;
e(1)=norm(r,inf);
iter=1;
while iter < mmax & e(iter)/e(1)>tol,
    r=txS1(tevS,u)-b;
    I=txS2(tevS,r)+alpha*DepthWeight(penalty(u),h);
    beta=(norm(I)^2)/(norm(I0)^2);
    I0=I;
    It=I+beta*It;
    k=(It'*I)/(norm(txS1(tevS,It))^2+alpha*norm(It)^2);
    u=u-k*It;
    if iter<2
        u0=u;
    end
    gamma=(norm(u)^2)/(norm(u0)^2)
    u0=u;
    if gamma >1
     alpha=alpha/gamma;
    end
    alpha
    
    Obj(iter)=norm(DepthWeight(u,h))^2+norm(r)^2;
    Obj(iter)

    iter=iter+1
    disp('loop done...');

    e(iter)=norm(r,inf);
    e(iter)/e(1)
   
end
plot(log10(e))